(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{367:function(t,e,r){"use strict";r.r(e);var s=r(43),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("在本章剩下部分我们会讲解"),r("code",[t._v("Fiber节点")]),t._v("是如何被创建并构建"),r("code",[t._v("Fiber树")]),t._v("的。")]),t._v(" "),r("p",[r("code",[t._v("render阶段")]),t._v("开始于"),r("code",[t._v("performSyncWorkOnRoot")]),t._v("或"),r("code",[t._v("performConcurrentWorkOnRoot")]),t._v("方法的调用。这取决于本次更新是同步更新还是异步更新。")]),t._v(" "),r("p",[t._v("我们现在还不需要学习这两个方法，只需要知道在这两个方法中会调用如下两个方法：")]),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// performSyncWorkOnRoot会调用该方法")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("workLoopSync")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("performUnitOfWork")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// performConcurrentWorkOnRoot会调用该方法")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("workLoopConcurrent")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldYield")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("performUnitOfWork")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workInProgress"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("p",[t._v("可以看到，他们唯一的区别是是否调用"),r("code",[t._v("shouldYield")]),t._v("。如果当前浏览器帧没有剩余时间，"),r("code",[t._v("shouldYield")]),t._v("会中止循环，直到浏览器有空闲时间后再继续遍历。")]),t._v(" "),r("p",[r("code",[t._v("workInProgress")]),t._v("代表当前已创建的"),r("code",[t._v("workInProgress fiber")]),t._v("。")]),t._v(" "),r("p",[r("code",[t._v("performUnitOfWork")]),t._v("方法会创建下一个"),r("code",[t._v("Fiber节点")]),t._v("并赋值给"),r("code",[t._v("workInProgress")]),t._v("，并将"),r("code",[t._v("workInProgress")]),t._v("与已创建的"),r("code",[t._v("Fiber节点")]),t._v("连接起来构成"),r("code",[t._v("Fiber树")]),t._v("。")]),t._v(" "),r("blockquote",[r("p",[t._v("你可以从"),r("a",{attrs:{href:"https://github.com/facebook/react/blob/master/packages/react-reconciler/src/ReactFiberWorkLoop.new.js#L1534",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),r("OutboundLink")],1),t._v("看到"),r("code",[t._v("workLoopConcurrent")]),t._v("的源码")])]),t._v(" "),r("p",[t._v("我们知道"),r("code",[t._v("Fiber Reconciler")]),t._v("是从"),r("code",[t._v("Stack Reconciler")]),t._v("重构而来，通过遍历的方式实现可中断的递归，所以"),r("code",[t._v("performUnitOfWork")]),t._v("的工作可以分为两部分：“递”和“归”。")]),t._v(" "),r("h2",{attrs:{id:"递-阶段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#递-阶段"}},[t._v("#")]),t._v(" “递”阶段")]),t._v(" "),r("p",[t._v("首先从"),r("code",[t._v("rootFiber")]),t._v("开始向下深度优先遍历。为遍历到的每个"),r("code",[t._v("Fiber节点")]),t._v("调用"),r("a",{attrs:{href:"https://github.com/facebook/react/blob/master/packages/react-reconciler/src/ReactFiberBeginWork.new.js#L3040",target:"_blank",rel:"noopener noreferrer"}},[t._v("beginWork方法"),r("OutboundLink")],1),t._v("。")]),t._v(" "),r("p",[t._v("该方法会根据传入的"),r("code",[t._v("Fiber节点")]),t._v("创建"),r("code",[t._v("子Fiber节点")]),t._v("，并将这两个"),r("code",[t._v("Fiber节点")]),t._v("连接起来。")]),t._v(" "),r("p",[t._v("当遍历到叶子节点（即没有子组件的组件）时就会进入“归”阶段。")]),t._v(" "),r("h2",{attrs:{id:"归-阶段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#归-阶段"}},[t._v("#")]),t._v(" “归”阶段")]),t._v(" "),r("p",[t._v("在“归”阶段会调用"),r("a",{attrs:{href:"https://github.com/facebook/react/blob/master/packages/react-reconciler/src/ReactFiberCompleteWork.new.js#L652",target:"_blank",rel:"noopener noreferrer"}},[t._v("completeWork"),r("OutboundLink")],1),t._v("处理"),r("code",[t._v("Fiber节点")]),t._v("。")]),t._v(" "),r("p",[t._v("当某个"),r("code",[t._v("Fiber节点")]),t._v("执行完"),r("code",[t._v("completeWork")]),t._v("，如果其存在"),r("code",[t._v("兄弟Fiber节点")]),t._v("（即"),r("code",[t._v("fiber.sibling !== null")]),t._v("），会进入其"),r("code",[t._v("兄弟Fiber")]),t._v("的“递”阶段。")]),t._v(" "),r("p",[t._v("如果不存在"),r("code",[t._v("兄弟Fiber")]),t._v("，会进入"),r("code",[t._v("父级Fiber")]),t._v("的“归”阶段。")]),t._v(" "),r("p",[t._v("“递”和“归”阶段会交错执行直到“归”到"),r("code",[t._v("rootFiber")]),t._v("。至此，"),r("code",[t._v("render阶段")]),t._v("的工作就结束了。")]),t._v(" "),r("h2",{attrs:{id:"例子"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[t._v("#")]),t._v(" 例子")]),t._v(" "),r("p",[t._v("以上一节的例子举例：")]),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("App")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      i am\n      "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("span"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("KaSong"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("span"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nReactDOM"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("App"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" document"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),r("p",[t._v("对应的"),r("code",[t._v("Fiber树")]),t._v("结构：\n"),r("img",{attrs:{src:t.$withBase("/img/fiber.png"),alt:"Fiber架构"}})]),t._v(" "),r("p",[r("code",[t._v("render阶段")]),t._v("会依次执行：")]),t._v(" "),r("div",{staticClass:"language-sh extra-class"},[r("pre",{pre:!0,attrs:{class:"language-sh"}},[r("code",[r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(". rootFiber beginWork\n"),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(". App Fiber beginWork\n"),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(". div Fiber beginWork\n"),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(". "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"i am"')]),t._v(" Fiber beginWork\n"),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(". "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"i am"')]),t._v(" Fiber completeWork\n"),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(". span Fiber beginWork\n"),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(". span Fiber completeWork\n"),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(". div Fiber completeWork\n"),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(". App Fiber completeWork\n"),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(". rootFiber completeWork\n")])])]),r("div",{staticClass:"custom-block warning"},[r("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),r("p",[t._v("之所以没有 “KaSong” Fiber 的 beginWork/completeWork，是因为作为一种性能优化手段，针对只有单一文本子节点的"),r("code",[t._v("Fiber")]),t._v("，"),r("code",[t._v("React")]),t._v("会特殊处理。")])]),t._v(" "),r("details",{staticClass:"custom-block details"},[r("summary",[t._v("自己试一试 Demo")]),t._v(" "),r("p",[t._v("我在"),r("code",[t._v("beginWork")]),t._v("和"),r("code",[t._v("completeWork")]),t._v("调用时打印"),r("code",[t._v("fiber.tag")]),t._v("和"),r("code",[t._v("fiber.type")]),t._v("。")]),t._v(" "),r("p",[t._v("你可以从"),r("a",{attrs:{href:"https://github.com/facebook/react/blob/master/packages/react-reconciler/src/ReactWorkTags.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("ReactWorkTags.js"),r("OutboundLink")],1),t._v("看到"),r("code",[t._v("Fiber节点")]),t._v("的所有"),r("code",[t._v("tag")]),t._v("定义。")]),t._v(" "),r("p",[t._v("相信多调试几次，你一定能明白方法的调用顺序")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://code.h5jun.com/kexev/edit?html,js,console,output",target:"_blank",rel:"noopener noreferrer"}},[t._v("Demo"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),r("p",[t._v("本节我们介绍了"),r("code",[t._v("render阶段")]),t._v("会调用的方法。在接下来两节中，我们会讲解"),r("code",[t._v("beginWork")]),t._v("和"),r("code",[t._v("completeWork")]),t._v("做的具体工作。")]),t._v(" "),r("h2",{attrs:{id:"参考资料"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://indepth.dev/the-how-and-why-on-reacts-usage-of-linked-list-in-fiber-to-walk-the-components-tree/",target:"_blank",rel:"noopener noreferrer"}},[t._v("The how and why on React’s usage of linked list in Fiber to walk the component’s tree"),r("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=a.exports}}]);